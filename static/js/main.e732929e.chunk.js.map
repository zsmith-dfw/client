{"version":3,"sources":["config.js","Data.js","Context.js","components/Header.js","components/Course.js","components/Courses.js","components/Form.js","components/UserSignUp.js","components/UserSignIn.js","components/ActionsBar.js","components/Info.js","components/CourseDetail.js","components/CreateCourse.js","components/UpdateCourse.js","components/DeleteCourse.js","Error.js","PrivateRoute.js","App.js","components/UserSignOut.js","index.js"],"names":["Data","path","method","body","requiresAuth","credentials","url","config","options","headers","JSON","stringify","encodedCredentials","btoa","emailAddress","password","fetch","this","api","response","status","json","then","data","Error","user","errors","course","id","Context","React","createContext","Provider","state","authenticatedUser","Cookies","getJSON","signIn","a","getUser","setState","set","expires","signOut","remove","value","actions","props","children","Component","Consumer","withContext","context","Header","authUser","className","Fragment","firstName","lastName","to","PureComponent","Course","title","Courses","returnCourses","axios","get","courses","catch","error","console","log","results","length","map","key","version","xmlns","x","y","viewBox","points","cancel","submit","submitButtonText","elements","ErrorsDisplay","onSubmit","event","preventDefault","type","onClick","errorsDisplay","i","UserSignUp","confirmPassword","change","name","target","createUser","history","push","err","Form","onChange","placeholder","UserSignIn","from","location","pathname","ActionsBar","userId","ActionsBarWithContext","Info","source","desc","time","materials","CourseDetail","returnCourseInfo","params","match","courseInfo","User","description","estimatedTime","materialsNeeded","CreateCourse","createCourse","UpdateCourse","DeleteCourse","component","rest","render","UserSignUpWithContext","UserSignInWithContext","UserSignOutWithContext","useEffect","CreateCourseWithContext","UpdateCourseWithContext","DeleteCourseWithContext","HeaderWithContext","App","exact","PrivateRoute","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e732929e.chunk.js","sourcesContent":["\r\nexport default {\r\n    apiBaseUrl: 'https://zsmithdfw-coursesapi.herokuapp.com/api',\r\n  };\r\n  ","import config from \"./config\";\r\n\r\n// This provides all of the helper methods for all CRUD operations concerning both users and courses. Having them here keeps each component a lot neater.\r\n\r\nexport default class Data {\r\n  api(\r\n    path,\r\n    method = \"GET\",\r\n    body = null,\r\n    requiresAuth = false,\r\n    credentials = null\r\n  ) {\r\n    const url = config.apiBaseUrl + path;\r\n\r\n    const options = {\r\n      method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset=utf-8\",\r\n      },\r\n    };\r\n\r\n    if (body !== null) {\r\n      options.body = JSON.stringify(body);\r\n    }\r\n\r\n    if (requiresAuth) {\r\n      const encodedCredentials = btoa(\r\n        `${credentials.emailAddress}:${credentials.password}`\r\n      );\r\n      options.headers[\"Authorization\"] = `Basic ${encodedCredentials}`;\r\n    }\r\n\r\n    return fetch(url, options);\r\n  }\r\n\r\n  async getUser(emailAddress, password) {\r\n    const response = await this.api(`/users`, \"GET\", null, true, {\r\n      emailAddress,\r\n      password,\r\n    });\r\n\r\n    if (response.status === 200) {\r\n      return response.json().then((data) => data);\r\n    } else if (response.status === 401) {\r\n      return null;\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n  async createUser(user) {\r\n    const response = await this.api(\"/users\", \"POST\", user);\r\n    if (response.status === 201) {\r\n      return [];\r\n    } else if (response.status === 400) {\r\n      return response.json().then((data) => {\r\n        return data.errors;\r\n      });\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n  async createCourse(course, emailAddress, password) {\r\n    const response = await this.api(\"/courses\", \"POST\", course, true, {\r\n      emailAddress,\r\n      password,\r\n    });\r\n\r\n    if (response.status === 201) {\r\n      return [];\r\n    } else if (response.status === 400) {\r\n      return response.json().then((data) => {\r\n        return data.errors;\r\n      });\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n  async UpdateCourse(course, emailAddress, password) {\r\n    const response = await this.api(\r\n      `/courses/${course.id}`,\r\n      \"PUT\",\r\n      course,\r\n      true,\r\n      { emailAddress, password }\r\n    );\r\n\r\n    if (response.status === 204) {\r\n      return [];\r\n    } else if (response.status === 400) {\r\n      return response.json().then((data) => {\r\n        return data.errors;\r\n      });\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  }\r\n\r\n  async DeleteCourse(course, emailAddress, password) {\r\n    const response = await this.api(\r\n      `/courses/${course.id}`,\r\n      \"DELETE\",\r\n      course,\r\n      true,\r\n      { emailAddress, password }\r\n    );\r\n\r\n    if (response.status === 204) {\r\n      return [];\r\n    } else if (response.status === 400) {\r\n      return response.json().then((data) => {\r\n        return data.errors;\r\n      });\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Data from \"./Data\";\r\nimport Cookies from \"js-cookie\";\r\n\r\n// Context API provides functions to use Sign In / Sign Out functions without the need for excessive prop drilling.\r\n\r\nconst Context = React.createContext();\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    authenticatedUser: Cookies.getJSON(\"authenticatedUser\") || null,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.data = new Data();\r\n  }\r\n\r\n  render() {\r\n    const { authenticatedUser } = this.state;\r\n    const value = {\r\n      authenticatedUser,\r\n      data: this.data,\r\n      actions: {\r\n        signIn: this.signIn,\r\n        signOut: this.signOut,\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Context.Provider value={value}>{this.props.children}</Context.Provider>\r\n    );\r\n  }\r\n\r\n  signIn = async (emailAddress, password) => {\r\n    const user = await this.data.getUser(emailAddress, password);\r\n    if (user !== null) {\r\n      user.password = password;\r\n      this.setState(() => {\r\n        return {\r\n          authenticatedUser: user,\r\n        };\r\n      });\r\n      Cookies.set(\"authenticatedUser\", JSON.stringify(user), { expires: 1 });\r\n    }\r\n    return user;\r\n  };\r\n\r\n  signOut = () => {\r\n    this.setState(() => {\r\n      return {\r\n        authenticatedUser: null,\r\n      };\r\n    });\r\n    Cookies.remove(\"authenticatedUser\");\r\n  };\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n\r\nexport default function withContext(Component) {\r\n  return function ContextComponent(props) {\r\n    return (\r\n      <Context.Consumer>\r\n        {(context) => <Component {...props} context={context} />}\r\n      </Context.Consumer>\r\n    );\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// checks to see if a user is signed in or not\r\n\r\nexport default class Header extends React.PureComponent {\r\n  render() {\r\n    const { context } = this.props;\r\n    const authUser = context.authenticatedUser;\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"bounds\">\r\n          <h1 className=\"header--logo\">Courses</h1>\r\n          <nav>\r\n          {authUser ?\r\n          <React.Fragment>\r\n            <span>Welcome, {authUser.firstName} {authUser.lastName}</span>\r\n            <Link className=\"signout\" to=\"/signout\">Sign Out</Link>\r\n          </React.Fragment>\r\n\r\n         :\r\n            <React.Fragment>\r\n              <Link className=\"signup\" to=\"/signup\">Sign Up</Link>\r\n              <Link className=\"signin\" to=\"/signin\">Sign In</Link>\r\n            </React.Fragment>\r\n          }\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Renders a course button for each course on the main page \r\n\r\nconst Course = (props) => (\r\n  <div className=\"grid-33\">\r\n    <Link className=\"course--module course--link\" to={`/courses/${props.id}`}>\r\n      <h4 className=\"course--label\">Course</h4>\r\n      <h3 className=\"course--title\">{props.title}</h3>\r\n    </Link>\r\n  </div>\r\n);\r\nexport default Course;\r\n","import React, { Component } from \"react\";\r\nimport Course from \"./Course\";\r\nimport config from \"../config\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// takes each course button component and renders them into a grid\r\n\r\nexport default class Courses extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      courses: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.returnCourses();\r\n  }\r\n\r\n  returnCourses = () => {\r\n    axios\r\n      .get(`${config.apiBaseUrl}/courses`)\r\n      .then((response) => {\r\n        this.setState({\r\n          courses: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error fetching and parsing data\", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const results = this.state.courses;\r\n    let courses;\r\n    if (results && results.length > 0) {\r\n      courses = results.map((course) => (\r\n        <Course title={course.title} key={course.id} id={course.id} />\r\n      ));\r\n    }\r\n\r\n    return (\r\n      <div className=\"bounds\">\r\n        {courses}\r\n        <div className=\"grid-33\">\r\n          <Link className=\"course--module course--add--module\" to=\"/create\">\r\n            <h3 className=\"course--add--title\">\r\n              <svg\r\n                version=\"1.1\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                x=\"0px\"\r\n                y=\"0px\"\r\n                viewBox=\"0 0 13 13\"\r\n                className=\"add\"\r\n              >\r\n                <polygon points=\"7,6 7,0 6,0 6,6 0,6 0,7 6,7 6,13 7,13 7,7 13,7 13,6 \"></polygon>\r\n              </svg>\r\n              New Course\r\n            </h3>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n// similar in nature to the Treehouse course on React authentication, this code handles the submit / cancel buttons for creating, deleting, and updating a course. \r\n\r\nexport default (props) => {\r\n  const {\r\n    cancel,\r\n    errors,\r\n    submit,\r\n    submitButtonText,\r\n    elements,\r\n  } = props;\r\n\r\n  // will attempt to submit course data (new or updates) to the database but if there is any kind of validation error, it will throw those errors so the user knows what is missing. \r\n  // If there is any other type of error (i.e. 404 or 500) then the user is routed to the error page\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    submit();\r\n  }\r\n\r\n  function handleCancel(event) {\r\n    event.preventDefault();\r\n    cancel();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ErrorsDisplay errors={errors} />\r\n      <form onSubmit={handleSubmit}>\r\n        {elements()}\r\n        <div className=\"pad-bottom\">\r\n          <button className=\"button\" type=\"submit\">{submitButtonText}</button>\r\n          <button className=\"button button-secondary\" onClick={handleCancel}>Cancel</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ErrorsDisplay({ errors }) {\r\n  let errorsDisplay = null;\r\n\r\n  if (errors.length) {\r\n    errorsDisplay = (\r\n      <div>\r\n        <h2 className=\"validation--errors--label\">Validation errors</h2>\r\n        <div className=\"validation-errors\">\r\n          <ul>\r\n            {errors.map((error, i) => <li key={i}>{error}</li>)}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return errorsDisplay;\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from \"./Form\";\r\n\r\nexport default class UserSignUp extends Component {\r\n  state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    emailAddress: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    errors: [],\r\n  };\r\n  \r\n  render() {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      emailAddress,\r\n      password,\r\n      confirmPassword,\r\n      errors,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"bounds\">\r\n        <div className=\"grid-33 centered signin\">\r\n          <h1>Sign Up</h1>\r\n          <Form\r\n            cancel={this.cancel}\r\n            errors={errors}\r\n            submit={this.submit}\r\n            submitButtonText=\"Sign Up\"\r\n            elements={() => (\r\n              <React.Fragment>\r\n                <input\r\n                  id=\"firstName\"\r\n                  name=\"firstName\"\r\n                  type=\"text\"\r\n                  value={firstName}\r\n                  onChange={this.change}\r\n                  placeholder=\"First Name\"\r\n                />\r\n                <input\r\n                  id=\"lastName\"\r\n                  name=\"lastName\"\r\n                  type=\"text\"\r\n                  value={lastName}\r\n                  onChange={this.change}\r\n                  placeholder=\"Last Name\"\r\n                />\r\n                <input\r\n                  id=\"emailAddress\"\r\n                  name=\"emailAddress\"\r\n                  type=\"text\"\r\n                  value={emailAddress}\r\n                  onChange={this.change}\r\n                  placeholder=\"Email Address\"\r\n                />\r\n                <input\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  onChange={this.change}\r\n                  placeholder=\"Password\"\r\n                />\r\n                <input\r\n                  id=\"confirmPassword\"\r\n                  name=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  value={confirmPassword}\r\n                  onChange={this.change}\r\n                  placeholder=\"Confirm Password\"\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n          />\r\n          <p>\r\n            Already have a user account? <Link to=\"/signin\">Click here</Link> to\r\n            sign in!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  change = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  submit = () => {\r\n    const { context } = this.props;\r\n\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      emailAddress,\r\n      password,\r\n      confirmPassword,\r\n    } = this.state;\r\n\r\n    const user = {\r\n      firstName,\r\n      lastName,\r\n      emailAddress,\r\n      password,\r\n      confirmPassword,\r\n    };\r\n\r\n    context.data\r\n      .createUser(user)\r\n      .then((errors) => {\r\n        if (errors.length) {\r\n          this.setState({ errors });\r\n        } else {\r\n          context.actions.signIn(emailAddress, password).then(() => {\r\n            this.props.history.push(\"/\");\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.props.history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  cancel = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from \"./Form\";\r\n\r\nexport default class UserSignIn extends Component {\r\n  state = {\r\n    emailAddress: \"\",\r\n    password: \"\",\r\n    errors: [],\r\n  };\r\n  render() {\r\n    const { emailAddress, password, errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"bounds\">\r\n        <div className=\"grid-33 centered signin\">\r\n          <h1>Sign In</h1>\r\n          <Form\r\n            cancel={this.cancel}\r\n            errors={errors}\r\n            submit={this.submit}\r\n            submitButtonText=\"Sign In\"\r\n            elements={() => (\r\n              <React.Fragment>\r\n                <input\r\n                  id=\"emailAddress\"\r\n                  name=\"emailAddress\"\r\n                  type=\"text\"\r\n                  value={emailAddress}\r\n                  onChange={this.change}\r\n                  placeholder=\"Email Address\"\r\n                />\r\n                <input\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  onChange={this.change}\r\n                  placeholder=\"Password\"\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n          />\r\n          <p>\r\n            Don't have a user account? <Link to=\"/signup\">Click here</Link> to\r\n            sign up!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  change = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  submit = () => {\r\n    const { context } = this.props;\r\n    const { emailAddress, password } = this.state;\r\n    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\r\n\r\n    context.actions\r\n      .signIn(emailAddress, password)\r\n      .then((user) => {\r\n        if (user === null) {\r\n          this.setState(() => {\r\n            return { errors: [\"Unsuccessful sign-in attempt\"] };\r\n          });\r\n        } else {\r\n          this.props.history.push(from);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.props.history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  cancel = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class ActionsBar extends React.PureComponent {\r\n  render() {\r\n    const { context } = this.props;\r\n    const authUser = context.authenticatedUser;\r\n\r\n    // Just has the links at the top to update, delete, or cancel. Split into its own component for modularity\r\n\r\n    return (\r\n      <div className=\"actions--bar\">\r\n        <div className=\"bounds\">\r\n          <div className=\"grid-100\">\r\n            {authUser && authUser.userId === this.props.userId ? (\r\n              <React.Fragment>\r\n                <span>\r\n                  <Link\r\n                    className=\"button\"\r\n                    to={`/courses/${this.props.id}/update`}\r\n                  >\r\n                    Update Course\r\n                  </Link>\r\n                  <Link\r\n                    className=\"button\"\r\n                    to={`/courses/${this.props.id}/delete`}\r\n                  >\r\n                    Delete Course\r\n                  </Link>\r\n                </span>\r\n                <Link className=\"button button-secondary\" to=\"/\">\r\n                  Return to List\r\n                </Link>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                <Link className=\"button button-secondary\" to=\"/\">\r\n                  Return to List\r\n                </Link>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ActionsBar from \"./ActionsBar\";\r\nimport withContext from \"../Context\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\n// renders all of the data for each individual course\r\n\r\nconst ActionsBarWithContext = withContext(ActionsBar);\r\nconst Info = (props) => (\r\n  <div>\r\n    <ActionsBarWithContext userId={props.userId} id={props.id} />\r\n    <div className=\"bounds course--detail\">\r\n      <div className=\"grid-66\">\r\n        <div className=\"course--header\">\r\n          <h4 className=\"course--label\">Course</h4>\r\n          <h3 className=\"course--title\">{props.title}</h3>\r\n          <p>\r\n            {props.firstName} {props.lastName}\r\n          </p>\r\n        </div>\r\n        <div className=\"course--description\">\r\n          <ReactMarkdown source={props.desc} />\r\n        </div>\r\n      </div>\r\n      <div className=\"grid-25 grid-right\">\r\n        <div className=\"course--stats\">\r\n          <ul className=\"course--stats--list\">\r\n            <li className=\"course--stats--list--item\">\r\n              <h4>Estimated Time</h4>\r\n              <h3>{props.time}</h3>\r\n            </li>\r\n            <li className=\"course--stats--list--item\">\r\n              <h4>Materials Needed</h4>\r\n              <ul>\r\n                <ReactMarkdown source={props.materials} />\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Info;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport config from \"../config\";\r\nimport Info from \"./Info\";\r\n\r\n// Fetches data from API and makes props for each part of the course so each course has its own page. This is done in the Info component\r\n\r\nexport default class CourseDetail extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      courseInfo: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.returnCourseInfo();\r\n  }\r\n\r\n  returnCourseInfo = () => {\r\n    const {\r\n      match: { params },\r\n    } = this.props;\r\n    axios\r\n      .get(`${config.apiBaseUrl}/courses/${params.id}`)\r\n      .then((response) => {\r\n        this.setState({\r\n          course: response.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error fetching and parsing data\", error);\r\n      });\r\n  };\r\n  \r\n  render() {\r\n    const results = this.state.course;\r\n    let courses;\r\n    if (results) {\r\n      return (\r\n        <div>\r\n          <Info\r\n            title={results.title}\r\n            key={results.id}\r\n            id={results.id}\r\n            firstName={results.User.firstName}\r\n            lastName={results.User.lastName}\r\n            desc={results.description}\r\n            time={results.estimatedTime}\r\n            materials={results.materialsNeeded}\r\n            userId={results.userId}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return <div>{courses}</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"./Form\";\r\n\r\n// pretty self explanatory. creates the screen for a user to create their own course\r\n\r\nexport default class CreateCourse extends Component {\r\n  state = {\r\n    title: \"\",\r\n    description: \"\",\r\n    estimatedTime: \"\",\r\n    materialsNeeded: \"\",\r\n    errors: [],\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      errors,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"bounds course--detail\">\r\n        <h1>Create Course</h1>\r\n        <Form\r\n          cancel={this.cancel}\r\n          errors={errors}\r\n          submit={this.submit}\r\n          submitButtonText=\"Create Course\"\r\n          elements={() => (\r\n            <React.Fragment>\r\n              <div className=\"grid-66\">\r\n                <div className=\"course--header\">\r\n                  <h4 className=\"course--label\">Course</h4>\r\n                  <div>\r\n                    <input\r\n                      id=\"title\"\r\n                      name=\"title\"\r\n                      type=\"text\"\r\n                      value={title}\r\n                      onChange={this.change}\r\n                      placeholder=\"Course title...\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"course--description\">\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    type=\"text\"\r\n                    value={description}\r\n                    onChange={this.change}\r\n                    placeholder=\"Course description...\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"grid-25 grid-right\">\r\n                <div className=\"course--stats\">\r\n                  <ul className=\"course--stats--list\">\r\n                    <li className=\"course--stats--list--item\">\r\n                      <h4>Estimated Time</h4>\r\n                      <div>\r\n                        <input\r\n                          id=\"estimatedTime\"\r\n                          name=\"estimatedTime\"\r\n                          type=\"text\"\r\n                          value={estimatedTime}\r\n                          onChange={this.change}\r\n                          className=\"course--time--input\"\r\n                          placeholder=\"Hours\"\r\n                        />\r\n                      </div>\r\n                    </li>\r\n                    <li className=\"course--stats--list--item\">\r\n                      <h4>Materials Needed</h4>\r\n                      <div>\r\n                        <textarea\r\n                          id=\"materialsNeeded\"\r\n                          name=\"materialsNeeded\"\r\n                          type=\"text\"\r\n                          value={materialsNeeded}\r\n                          onChange={this.change}\r\n                          placeholder=\"List materials...\"\r\n                        />\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  change = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  submit = () => {\r\n    const { context } = this.props;\r\n    const { title, description, estimatedTime, materialsNeeded } = this.state;\r\n    const emailAddress = context.authenticatedUser.emailAddress;\r\n    const password = context.authenticatedUser.password;\r\n    const userId = context.authenticatedUser.userId;\r\n\r\n    const course = {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      userId,\r\n    };\r\n\r\n    context.data\r\n      .createCourse(course, emailAddress, password)\r\n      .then((errors) => {\r\n        if (errors.length) {\r\n          this.setState({ errors });\r\n        } else {\r\n          this.props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.props.history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  cancel = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"./Form\";\r\nimport config from \"../config\";\r\nimport axios from \"axios\";\r\n\r\nexport default class UpdateCourse extends Component {\r\n  state = {\r\n    title: \"\",\r\n    description: \"\",\r\n    estimatedTime: \"\",\r\n    materialsNeeded: \"\",\r\n    id: this.props.match.params.id,\r\n    errors: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.returnCourseInfo();\r\n  }\r\n\r\n  returnCourseInfo = () => {\r\n    const {\r\n      match: { params },\r\n    } = this.props;\r\n    axios\r\n      .get(`${config.apiBaseUrl}/courses/${params.id}`)\r\n      .then((response) => {\r\n        this.setState({\r\n            title: response.data.title,\r\n            description: response.data.description,\r\n            estimatedTime: response.data.estimatedTime,\r\n            materialsNeeded: response.data.materialsNeeded,\r\n          \r\n        }\r\n        \r\n        );\r\n        console.log(this.setState)\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error fetching and parsing data\", error);\r\n      });\r\n  };\r\n\r\n    render() {\r\n      const { errors} = this.state\r\n\r\n      const {\r\n        title,\r\n        description,\r\n        estimatedTime,\r\n        materialsNeeded,\r\n      } = this.state;\r\n\r\n      console.log(this.state);\r\n\r\n\r\n    return (\r\n      <div className=\"bounds course--detail\">\r\n        <h1>Update Course</h1>\r\n        <Form\r\n          cancel={this.cancel}\r\n          errors={errors}\r\n          submit={this.submit}\r\n          submitButtonText=\"Update Course\"\r\n          elements={() => (\r\n            <React.Fragment>\r\n              <div className=\"grid-66\">\r\n                <div className=\"course--header\">\r\n                  <h4 className=\"course--label\">Course</h4>\r\n                  <div>\r\n                    <input\r\n                      id=\"title\"\r\n                      name=\"title\"\r\n                      type=\"text\"\r\n                      value={title}\r\n                      onChange={this.change}\r\n                      placeholder=\"Course title...\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"course--description\">\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    type=\"text\"\r\n                    value={description}\r\n                    onChange={this.change}\r\n                    placeholder=\"Course description...\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"grid-25 grid-right\">\r\n                <div className=\"course--stats\">\r\n                  <ul className=\"course--stats--list\">\r\n                    <li className=\"course--stats--list--item\">\r\n                      <h4>Estimated Time</h4>\r\n                      <div>\r\n                        <input\r\n                          id=\"estimatedTime\"\r\n                          name=\"estimatedTime\"\r\n                          type=\"text\"\r\n                          value={estimatedTime}\r\n                          onChange={this.change}\r\n                          className=\"course--time--input\"\r\n                          placeholder=\"Hours\"\r\n                        />\r\n                      </div>\r\n                    </li>\r\n                    <li className=\"course--stats--list--item\">\r\n                      <h4>Materials Needed</h4>\r\n                      <div>\r\n                        <textarea\r\n                          id=\"materialsNeeded\"\r\n                          name=\"materialsNeeded\"\r\n                          type=\"text\"\r\n                          value={materialsNeeded}\r\n                          onChange={this.change}\r\n                          placeholder=\"List materials...\"\r\n                        />\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  change = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  submit = () => {\r\n    const { context } = this.props;\r\n\r\n    const {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      id,\r\n    } = this.state;\r\n    \r\n    const emailAddress = context.authenticatedUser.emailAddress;\r\n    const password = context.authenticatedUser.password;\r\n    const userId = context.authenticatedUser.userId;\r\n\r\n    const course = {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      id,\r\n      userId,\r\n    };\r\n\r\n    context.data\r\n      .UpdateCourse(course, emailAddress, password)\r\n      .then((errors) => {\r\n        if (errors.length) {\r\n          this.setState({ errors });\r\n        } else {\r\n          this.props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.props.history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  cancel = () => {\r\n    this.props.history.push(`/courses/${this.props.match.params.id}`);\r\n  };\r\n}","import React, { Component } from \"react\";\r\nimport Form from \"./Form\";\r\n\r\n// decided to make this so that users don't inadvertantly delete courses they don't mean to\r\n\r\nexport default class DeleteCourse extends Component {\r\n\r\n    state = {\r\n        title: \"\",\r\n        description: \"\",\r\n        estimatedTime: \"\",\r\n        materialsNeeded: \"\",\r\n        id: this.props.match.params.id,\r\n        errors: [],\r\n      };\r\n\r\n  render() {\r\n    const {  errors } = this.state;\r\n    return (\r\n      <div className=\"bounds\">\r\n        <h1>Are you sure you want to delete this course?</h1>\r\n\r\n        <Form\r\n          cancel={this.cancel}\r\n          errors={errors}\r\n          submit={this.submit}\r\n          submitButtonText=\"Delete Course\"\r\n          elements={() => (\r\n            <p>This action cannot be reversed!</p>\r\n          )}\r\n\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  submit = () => {\r\n    const { context } = this.props;\r\n    const {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      id,\r\n    } = this.state;\r\n    \r\n    const emailAddress = context.authenticatedUser.emailAddress;\r\n    const password = context.authenticatedUser.password;\r\n    const userId = context.authenticatedUser.userId;\r\n\r\n    const course = {\r\n      title,\r\n      description,\r\n      estimatedTime,\r\n      materialsNeeded,\r\n      id,\r\n      userId,\r\n    };\r\n\r\n    context.data\r\n      .DeleteCourse(course, emailAddress, password, id)\r\n      .then((errors) => {\r\n        if (errors.length) {\r\n          this.setState({ errors });\r\n        } else {\r\n          this.props.history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.props.history.push(\"/error\");\r\n      });\r\n  };\r\n\r\n  cancel = () => {\r\n    this.props.history.push(`/courses/${this.props.match.params.id}`);\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nexport default () => (\r\n  <div className=\"bounds\">\r\n    <h1>Error</h1>\r\n    <p>Sorry! We just encountered an unexpected error.</p>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { Consumer } from './Context';\r\n\r\nexport default ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Consumer>\r\n      { context => (\r\n        <Route\r\n          {...rest}\r\n          render={props => context.authenticatedUser ? (\r\n            <Component {...props} />\r\n          ) : (\r\n              <Redirect to={{\r\n                pathname: '/signin',\r\n                state: { from: props.location },\r\n              }} />\r\n          )\r\n          }\r\n        />\r\n      )}\r\n    </Consumer>\r\n  );\r\n};","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport withContext from \"./Context\";\nimport Header from \"./components/Header\";\nimport Courses from \"./components/Courses\";\nimport UserSignUp from \"./components/UserSignUp\";\nimport UserSignIn from \"./components/UserSignIn\";\nimport UserSignOut from \"./components/UserSignOut\";\nimport CourseDetail from \"./components/CourseDetail\";\nimport CreateCourse from \"./components/CreateCourse\";\nimport UpdateCourse from \"./components/UpdateCourse\";\nimport DeleteCourse from \"./components/DeleteCourse\";\nimport Error from \"./Error\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst UserSignUpWithContext = withContext(UserSignUp);\nconst UserSignInWithContext = withContext(UserSignIn);\nconst UserSignOutWithContext = withContext(UserSignOut);\nconst CreateCourseWithContext = withContext(CreateCourse);\nconst UpdateCourseWithContext = withContext(UpdateCourse);\nconst DeleteCourseWithContext = withContext(DeleteCourse);\nconst HeaderWithContext = withContext(Header);\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <HeaderWithContext />\n        <Switch>\n          <Route exact path=\"/\" render={() => <Courses />} />\n          <Route path=\"/signin\" component={UserSignInWithContext} />\n          <Route path=\"/signup\" component={UserSignUpWithContext} />\n          <Route path=\"/signout\" component={UserSignOutWithContext} />\n          <PrivateRoute path=\"/create\" component={CreateCourseWithContext} />\n          <PrivateRoute\n            path=\"/courses/:id/update\"\n            component={UpdateCourseWithContext}\n          />\n          <PrivateRoute\n            path=\"/courses/:id/delete\"\n            component={DeleteCourseWithContext}\n          />\n          <Route path={\"/courses/:id\"} component={CourseDetail} />\n          <Route path={\"/error\"} component={Error} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default ({context}) => {\r\n  useEffect(() => context.actions.signOut());\r\n\r\n  return (\r\n    <Redirect to=\"/\" />\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from './Context';\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}